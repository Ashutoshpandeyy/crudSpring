package com.emp.demo.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.emp.demo.entity.Employee;
import com.emp.demo.service.EmployeeService;

@RestController
public class EmployeeController {
	
	@Autowired
	private EmployeeService employeeService;
	
	@GetMapping("/emps")
	public List<Employee> getEmployees(){
		return this.employeeService.getEmployees();
	}
	
	
//	//get single
//	@GetMapping("/emps/{id}")
//	public ResponseEntity<Optional<Employee>> getEmployeeById(@PathVariable("id") Long id){
//		
//		if(this.employeeService.findById(id)== null) {
//			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
//		}
//		
//		return new ResponseEntity<>(this.employeeService.findById(id), HttpStatus.OK);
//	}
	
	
	
	//get single
	@GetMapping("/emps/{id}")
	public ResponseEntity<Employee> getEmployeeById(@PathVariable("id") Long id){
		
		try {
			return new ResponseEntity<>(this.employeeService.getEmployeeById(id), HttpStatus.OK);
		}catch (Exception e) {
			
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
//		if(this.employeeService.getEmployeeById(id)== null) {
//			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
//		}
//		
//		return new ResponseEntity<>(this.employeeService.getEmployeeById(id), HttpStatus.OK);
	}
	
	
	
	@PostMapping("/addemp")
	public ResponseEntity<Employee> addEmployee(@RequestBody Employee employee){
		
		Employee emp = this.employeeService.addEmployee(employee);
		
		if(emp == null) {
			return new ResponseEntity<>(emp, HttpStatus.NOT_FOUND);
		}
		
		return new ResponseEntity<>(emp, HttpStatus.OK);
	}
	
	
	@PutMapping("/updatemp")
	public ResponseEntity<Employee> updateEmployee(@RequestBody Employee employee){
		Employee emp = this.employeeService.updateEmployee(employee);
		if(emp == null) {
			return new ResponseEntity<>(emp, HttpStatus.NOT_FOUND);
		}
		
		return new ResponseEntity<Employee>(emp, HttpStatus.OK);
	}
	
	
	@DeleteMapping("/emps/{id}")
	public ResponseEntity<HttpStatus> deleteEmployee(@PathVariable Long id){
		try {
			this.employeeService.deleteEmployee(id);
			return new ResponseEntity<>(HttpStatus.OK);
		}catch (Exception e) {
			
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

}
